/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.clevertec.racing;

import ru.clevertec.racing.model.Car;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.*;

public class App {
    private static final Phaser phaser = new Phaser(1);

    public static void main(String[] args) throws IOException, InterruptedException, ExecutionException {
        Random random = new Random();
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Количество авто: ");
        int amountCar = Integer.parseInt(reader.readLine());
        System.out.println("Длина трассы (м): ");
        Integer lengthRoute = Integer.parseInt(reader.readLine());
        ExecutorService executorService = Executors.newFixedThreadPool(amountCar);
        List<Future<?>> futures = new ArrayList<>();
        for (int i = 0; i < amountCar; i++) {
            futures.add(executorService.submit(new Car(random.nextInt(30, 60), lengthRoute, phaser)));
        }
        phaser.arriveAndAwaitAdvance();
        Thread.sleep(1000);
        System.out.println("3");
        Thread.sleep(1000);
        System.out.println("2");
        Thread.sleep(1000);
        System.out.println("1");
        Thread.sleep(1000);
        System.out.println("СТАРТ!");
        phaser.arriveAndDeregister();
        for (Future<?> future : futures) {
            future.get();
        }
        executorService.shutdown();
        if (executorService.awaitTermination(5, TimeUnit.SECONDS)) {
            System.out.printf("%n!!! В ГОНКЕ ПОБЕДИЛ БОЛИД №%s !!!%n", Car.winner);
        }

    }
}
